name: Deploy Snowflake DDL

on:
  push:
    branches:
      - main # Or your primary branch
    paths:
      - 'ddl/isrctn/**.sql'
  workflow_dispatch: # Allows manual triggering

jobs:
  deploy-ddl-to-snowflake:
    name: Deploy DDL to Snowflake
    runs-on: ubuntu-latest
    environment: ClinicalTrialsELT # Optional: If you set up GitHub environments for approvals/protection

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SnowSQL
        run: |
          echo "Downloading latest SnowSQL..."
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-latest-linux_x86_64.bash
          chmod +x snowsql-latest-linux_x86_64.bash
          echo "Installing SnowSQL to $HOME/.snowsql..."
          # Non-interactive install to a specific directory, suppress login shell default messages
          SNOWSQL_DEST="$HOME/.snowsql" SNOWSQL_LOGIN_SHELL_DEFAULTS=n ./snowsql-latest-linux_x86_64.bash
          echo "Adding $HOME/.snowsql to GITHUB_PATH"
          echo "$HOME/.snowsql" >> $GITHUB_PATH
          echo "SnowSQL version:"
          "$HOME/.snowsql/snowsql" -v
        shell: bash

      - name: Run Snowflake DDLs
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          SF_DISABLE_UPGRADE_CHECK: "true" # Disable auto-upgrade check
        run: |
          echo "Connecting to Snowflake: Account $SNOWFLAKE_ACCOUNT, User $SNOWFLAKE_USER, Role $SNOWFLAKE_ROLE, DB $SNOWFLAKE_DATABASE, Schema $SNOWFLAKE_SCHEMA"
          
          echo "Looking for DDL files in ddl/ ..."
          find ddl -name '*.sql' -print0 | sort -z | while IFS= read -r -d $'\0' ddl_file; do
            echo "Executing DDL: $ddl_file"
            # Explicitly pass connection parameters. Password from SNOWFLAKE_PASSWORD env var.
            "$HOME/.snowsql/snowsql" \
              -a "$SNOWFLAKE_ACCOUNT" \
              -u "$SNOWFLAKE_USER" \
              -r "$SNOWFLAKE_ROLE" \
              -w "$SNOWFLAKE_WAREHOUSE" \
              -d "$SNOWFLAKE_DATABASE" \
              -s "$SNOWFLAKE_SCHEMA" \
              -q "!USE DATABASE IDENTIFIER('"\"$SNOWFLAKE_DATABASE\""'); !USE SCHEMA IDENTIFIER('"\"$SNOWFLAKE_SCHEMA\""'); !USE ROLE IDENTIFIER('"\"$SNOWFLAKE_ROLE\""'); !USE WAREHOUSE IDENTIFIER('"\"$SNOWFLAKE_WAREHOUSE\""'); $(cat "$ddl_file")" \
              -o exit_on_error=false \
              -o friendly=false \
              -o header=false \
              -o output_format=plain \
              -o timing=true
            if [ $? -ne 0 ]; then
              echo "Error executing $ddl_file. Aborting."
              exit 1
            fi
            echo "Successfully executed $ddl_file"
            echo "------------------------------------"
          done
          echo "All DDL files processed successfully."