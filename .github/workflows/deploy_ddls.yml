# Workflow that supports versions, goes in ~/.github/workflows/deploy.yaml

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on any branch or tag commit
  push:
    branches:
      - "*"
    tags:
      - "v*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  deploy:
    runs-on: ubuntu-latest
    environment: ClinicalTrialsELT
    env:
      SNOWSQL_PWD: ${{ secrets.SNOWFLAKE_PASSWORD }}

      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
      SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.4.0-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.4.0-linux_x86_64.bash
          sudo apt-get install -y openssl libssl-dev
          # Runs a single command using the runners shell
      - name: Deploy DDLs
        run: |
         echo "Looking for DDL files in ddl/ ..."
          find ddl -name '*.sql' -print0 | sort -z | while IFS= read -r -d $'\0' ddl_file; do
            echo "Executing DDL: $ddl_file"
            QUERY_CONTENTS="$(cat "$ddl_file")"
            FULL_QUERY="${QUERY_CONTENTS}"

            ~/bin/snowsql \
              -a "$SNOWFLAKE_ACCOUNT" \
              -u "$SNOWFLAKE_USER" \
              -r "$SNOWFLAKE_ROLE" \
              -w "$SNOWFLAKE_WAREHOUSE" \
              -d "$SNOWFLAKE_DATABASE" \
              -s "$SNOWFLAKE_SCHEMA" \
               -q "${FULL_QUERY}" \
              -o exit_on_error=false \
              -o friendly=false \
              -o header=false \
              -o output_format=plain \
              -o timing=true \
              -o log_level=DEBUG
            if [ $? -ne 0 ]; then
              echo "Error executing $ddl_file. Aborting."
              exit 1
            fi
            echo "Successfully executed $ddl_file"
            echo "------------------------------------"
           done